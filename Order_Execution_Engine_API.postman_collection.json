{
	"info": {
		"_postman_id": "order-execution-engine-api",
		"name": "Order Execution Engine API",
		"description": "Complete API collection for the Order Execution Engine with DEX routing, real-time WebSocket updates, and comprehensive metrics.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "order-execution-engine"
	},
	"item": [
		{
			"name": "Health & System",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check the overall health status of the Order Execution Engine including Redis, PostgreSQL, and queue health."
					},
					"response": []
				},
				{
					"name": "API Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Get the OpenAPI/Swagger documentation for all available endpoints."
					},
					"response": []
				}
			],
			"description": "System health and documentation endpoints"
		},
		{
			"name": "Order Management",
			"item": [
				{
					"name": "Submit Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"market\",\n  \"tokenIn\": \"SOL\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": 1.5,\n  \"slippage\": 0.01,\n  \"userId\": \"user123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/orders/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"execute"
							]
						},
						"description": "Submit a new market order for execution. The system will route the order to the best DEX (Raydium or Meteora) based on price and liquidity."
					},
					"response": []
				},
				{
					"name": "Get Order Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Get detailed status and information for a specific order including execution data and timeline."
					},
					"response": []
				},
				{
					"name": "List Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders?page=1&limit=20&status=pending&userId=user123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Items per page (default: 20, max: 100)"
								},
								{
									"key": "status",
									"value": "pending",
									"description": "Filter by order status"
								},
								{
									"key": "userId",
									"value": "user123",
									"description": "Filter by user ID"
								}
							]
						},
						"description": "Get a paginated list of orders with optional filtering by status and user ID."
					},
					"response": []
				},
				{
					"name": "Get Order Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/{{orderId}}/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}",
								"events"
							]
						},
						"description": "Get the complete event timeline for a specific order showing all status changes and execution steps."
					},
					"response": []
				},
				{
					"name": "Cancel Order",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Cancel a pending order. Only orders in 'pending' status can be cancelled."
					},
					"response": []
				}
			],
			"description": "Complete order lifecycle management including submission, status checking, listing, and cancellation."
		},
		{
			"name": "Metrics & Monitoring",
			"item": [
				{
					"name": "Get All Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"metrics"
							]
						},
						"description": "Get comprehensive system metrics including order statistics, DEX routing data, performance metrics, and recent activity."
					},
					"response": []
				},
				{
					"name": "Get Routing Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/metrics/routing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"metrics",
								"routing"
							]
						},
						"description": "Get detailed DEX routing statistics including decision reasons, average prices, and recent routing decisions."
					},
					"response": []
				},
				{
					"name": "Get Performance Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/metrics/performance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"metrics",
								"performance"
							]
						},
						"description": "Get detailed performance metrics including processing times, hourly activity, and queue statistics."
					},
					"response": []
				},
				{
					"name": "Get System Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/metrics/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"metrics",
								"health"
							]
						},
						"description": "Get detailed system health status including Redis, PostgreSQL, and queue health checks."
					},
					"response": []
				}
			],
			"description": "Comprehensive monitoring and metrics endpoints for system performance and health."
		},
		{
			"name": "WebSocket Examples",
			"item": [
				{
					"name": "WebSocket Connection Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ws/orders/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ws",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "WebSocket endpoint for real-time order updates. Connect to this URL to receive live status updates for a specific order.\n\nExample WebSocket connection:\n```javascript\nconst ws = new WebSocket('ws://localhost:3000/ws/orders/your-order-id');\n\nws.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  console.log('Order update:', data);\n};\n\nws.onopen = () => {\n  console.log('Connected to order updates');\n};\n```"
					},
					"response": []
				}
			],
			"description": "WebSocket connection examples and documentation for real-time order updates."
		},
		{
			"name": "Example Orders",
			"item": [
				{
					"name": "Market Order - SOL to USDC",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"market\",\n  \"tokenIn\": \"SOL\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": 2.5,\n  \"slippage\": 0.02,\n  \"userId\": \"trader001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/orders/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"execute"
							]
						},
						"description": "Example market order to swap 2.5 SOL for USDC with 2% slippage tolerance."
					},
					"response": []
				},
				{
					"name": "Market Order - USDC to SOL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"market\",\n  \"tokenIn\": \"USDC\",\n  \"tokenOut\": \"SOL\",\n  \"amountIn\": 100,\n  \"slippage\": 0.015,\n  \"userId\": \"trader002\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/orders/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"execute"
							]
						},
						"description": "Example market order to swap 100 USDC for SOL with 1.5% slippage tolerance."
					},
					"response": []
				},
				{
					"name": "Market Order - High Slippage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"market\",\n  \"tokenIn\": \"SOL\",\n  \"tokenOut\": \"USDC\",\n  \"amountIn\": 10,\n  \"slippage\": 0.05,\n  \"userId\": \"trader003\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/orders/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"execute"
							]
						},
						"description": "Example market order with higher slippage tolerance (5%) for volatile market conditions."
					},
					"response": []
				}
			],
			"description": "Pre-configured example orders for testing different scenarios and token pairs."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-generate order ID for testing if not set",
					"if (!pm.environment.get('orderId')) {",
					"    pm.environment.set('orderId', pm.variables.replaceIn('{{$guid}}'));",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Common test scripts for API responses",
					"pm.test('Status code is 200', function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"pm.test('Response time is less than 1000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(1000);",
					"});",
					"",
					"pm.test('Response has required headers', function () {",
					"    pm.response.to.have.header('Content-Type');",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});",
					"",
					"// Extract order ID from response if present",
					"if (pm.response.json().orderId) {",
					"    pm.environment.set('orderId', pm.response.json().orderId);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		}
	]
} 